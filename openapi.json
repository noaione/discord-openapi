{
    "openapi": "3.0.2",
    "info": {
        "title": "Discord API",
        "description": "**This is a custom OpenAPI 3.0 compatible schemas for Discord API.**\n\nIt's mainly made because looking at the documentation is very hard and confusing sometimes.\nSo some people might just want to use OAPI schema to look or even generate\nthe code for their own API client.\n\nMaintaned by [N4O#8868](https://github.com/noaione/discord-openapi).<br>\nThis project is not affiliated with Discord whatsoever.\n\nPlease report issue at: [https://github.com/noaione/discord-openapi](https://github.com/noaione/discord-openapi)\n\nAPI Version:\n- v6 (Discord API v6) - Deprecated **[Default]**\n- v8 (Discord API v8) - Active (Not recommended)\n- v9 (Discord API v9) - Active (Recommended)\n\nYou can use client like [Insomnia](https://insomnia.rest/) to request the API.<br>\nSince you cannot use this website to do it because of CORS (and I'm not planning to circumvent it).\n\nIf you want to see documentation for the Gateway? Click [here](/gateway).",
        "version": "v9-1.0.0"
    },
    "paths": {
        "/guilds": {
            "post": {
                "tags": [
                    "Guilds"
                ],
                "description": "Create Guild\n\nCreate a new guild. Returns a guild object on success.\n\nThis action will fires a GUILD_CREATE Gateway event.\n\nhttps://discord.com/developers/docs/resources/guild#create-guild",
                "operationId": "PostGuilds",
                "parameters": [
                    {
                        "name": "User-Agent",
                        "in": "header",
                        "description": "The user agent of the client. You must follow this format.\nWhere the user agent format is `DiscordBot ($url, $version)`.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DiscordBot (https://github.com/noaione/discord-openapi, 1.0)"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/POSTGuildCreation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Guild object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildHTTPObject"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid icon image format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/guilds/{guildId}": {
            "get": {
                "tags": [
                    "Guilds"
                ],
                "description": "Get Guild\n\nGet a guild. Returns the guild object for the given id.\n\nIf with_counts is set to true, this endpoint will also return\napproximate_member_count and approximate_presence_count for the guild.\n\nhttps://discord.com/developers/docs/resources/guild#get-guild",
                "operationId": "GetGuild",
                "parameters": [
                    {
                        "name": "guildId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Snowflake"
                        }
                    },
                    {
                        "name": "with_counts",
                        "in": "query",
                        "description": "When true, will return approximate member and presence count for the guild",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "false",
                                "true"
                            ]
                        }
                    },
                    {
                        "name": "User-Agent",
                        "in": "header",
                        "description": "The user agent of the client. You must follow this format.\nWhere the user agent format is `DiscordBot ($url, $version)`.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DiscordBot (https://github.com/noaione/discord-openapi, 1.0)"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested Guild object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildHTTPObject"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, you need to provide token to get the guild",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden, your provided token is missing some permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "You're trying to fetch an unknown guild",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Guilds"
                ],
                "description": "Modify Guild\n\nModify a guild's settings.\nRequires the `MANAGE_GUILD` permission.\nReturns the updated guild object on success and fires the GUILD_UPDATE Gateway event.\n\nhttps://discord.com/developers/docs/resources/guild#modify-guild",
                "operationId": "PatchGuildModify",
                "parameters": [
                    {
                        "name": "guildId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Snowflake"
                        }
                    },
                    {
                        "name": "X-Audit-Log-Reason",
                        "in": "header",
                        "description": "This endpoint support adding reason to audit log with this header.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/POSTGuildCreation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The modified guild object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildPreviewObject"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, you need to provide token to modify the guild",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden, your provided token is missing some permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "You're trying to modify an unknown guild",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Guilds"
                ],
                "description": "Delete Guild\n\nDelete a guild permanently.\nUser must be the guild owner to delete it.\nFires a GUILD_DELETE gateway event on success.\n\nhttps://discord.com/developers/docs/resources/guild#delete-guild",
                "operationId": "DeleteGuild",
                "parameters": [
                    {
                        "name": "guildId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Snowflake"
                        }
                    },
                    {
                        "name": "User-Agent",
                        "in": "header",
                        "description": "The user agent of the client. You must follow this format.\nWhere the user agent format is `DiscordBot ($url, $version)`.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DiscordBot (https://github.com/noaione/discord-openapi, 1.0)"
                            ]
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Returns 204 (No content) status"
                    },
                    "401": {
                        "description": "Unauthorized, you need to provide token to delete the guild",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden, your provided token is not the owner auth token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "You're trying to delete an unknown guild",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/guilds/{guildId}/preview": {
            "get": {
                "tags": [
                    "Guilds"
                ],
                "description": "Get Guild Preview\n\nGet a guild preview. Returns the guild preview object for the given id.\n\nIf the user is not in the guild, then the guild must be lurkable (it must be Discoverable or have a live public stage).\n\nhttps://discord.com/developers/docs/resources/guild#get-guild-preview",
                "operationId": "GetGuildPreview",
                "parameters": [
                    {
                        "name": "guildId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Snowflake"
                        }
                    },
                    {
                        "name": "User-Agent",
                        "in": "header",
                        "description": "The user agent of the client. You must follow this format.\nWhere the user agent format is `DiscordBot ($url, $version)`.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DiscordBot (https://github.com/noaione/discord-openapi, 1.0)"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested Guild object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildPreviewObject"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, you need to provide token to get the guild",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden, your provided token is missing some permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "You're trying to fetch an unknown guild",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/guilds/{guildId}/channels": {
            "get": {
                "tags": [
                    "Guilds"
                ],
                "description": "Get Guild Channels\n\nReturns a list of channels in the guild.\n\nThis does not include threads.\n\nhttps://discord.com/developers/docs/resources/guild#get-guild-channels",
                "operationId": "GetGuildChannels",
                "parameters": [
                    {
                        "name": "guildId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Snowflake"
                        }
                    },
                    {
                        "name": "User-Agent",
                        "in": "header",
                        "description": "The user agent of the client. You must follow this format.\nWhere the user agent format is `DiscordBot ($url, $version)`.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DiscordBot (https://github.com/noaione/discord-openapi, 1.0)"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of guild channels object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GuildChannel"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, you need to provide token to get the guild channels",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden, your provided token is missing permission needed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "You're trying to get an unknown guild",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Guilds"
                ],
                "description": "Create Guild Channels\n\nRequires the MANAGE_CHANNELS permission.\n\nIf setting permission overwrites,\nonly permissions your bot has in the guild can be allowed/denied.\n\nSetting MANAGE_ROLES permission in channels is only possible for guild administrators.\n\nReturns new channel object on success, and fires a CHANNEL_CREATE gateway event.\n\nhttps://discord.com/developers/docs/resources/guild#create-guild-channel",
                "operationId": "PostGuildChannelCreate",
                "parameters": [
                    {
                        "name": "guildId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Snowflake"
                        }
                    },
                    {
                        "name": "X-Audit-Log-Reason",
                        "in": "header",
                        "description": "This endpoint support adding reason to audit log with this header.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ChannelGuildMessageBody"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The created guild channel",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildChannel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, you need to provide token to create a guild channels",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden, your provided token is missing permission needed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "You're trying to create on an unknown guild",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/guilds/{guildId}/audit-logs": {
            "get": {
                "tags": [
                    "Guilds"
                ],
                "description": "Get Guild Audit Log\n\nReturns an audit log object for the guild.\nRequires the 'VIEW_AUDIT_LOG' permission.\n\nhttps://discord.com/developers/docs/resources/audit-log#get-guild-audit-log",
                "operationId": "GetGuildAuditLogs",
                "parameters": [
                    {
                        "name": "guildId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Snowflake"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Filter the log for actions made by user.",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/Snowflake"
                        }
                    },
                    {
                        "name": "action_type",
                        "in": "query",
                        "description": "The type of audit log event.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "Filter the log before certain entry ID.",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/Snowflake"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The limit that the API should return.\nMinimum of 1, and maximum of 100",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 50
                        }
                    },
                    {
                        "name": "User-Agent",
                        "in": "header",
                        "description": "The user agent of the client. You must follow this format.\nWhere the user agent format is `DiscordBot ($url, $version)`.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DiscordBot (https://github.com/noaione/discord-openapi, 1.0)"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Audit log object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuditLogResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden, your provided token is missing some permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "You're trying to fetch an unknown guild",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "B64StringFile": {
                "type": "string",
                "description": "A base64 encoded file"
            },
            "VerificationLevel": {
                "type": "integer",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                "format": "int32",
                "description": "The verification level of the guild.\n0 is none, 1 is low, 2 is medium, 3 is high, 4 is very high."
            },
            "MessageNotificationLevel": {
                "type": "integer",
                "enum": [
                    0,
                    1
                ],
                "format": "int32",
                "description": "The default message notification level of the guild.\n0 is all messages, 1 is only mentions."
            },
            "ExplicitContentFilterLevel": {
                "type": "integer",
                "enum": [
                    0,
                    1,
                    2
                ],
                "format": "int32",
                "description": "The default explicit content filter level of the guild.\n0 is disabled, 1 is members without roles, 2 is everyone."
            },
            "PermissionBit": {
                "type": "string",
                "description": "A permission bit set."
            },
            "GuildRoleBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "default": "new role",
                        "description": "Name of the role"
                    },
                    "color": {
                        "type": "number",
                        "format": "float",
                        "default": 0,
                        "description": "RGB color value"
                    },
                    "hoist": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether the role should be displayed separately in the sidebar"
                    },
                    "icon": {
                        "$ref": "#/components/schemas/B64StringFile",
                        "nullable": true
                    },
                    "unicode_emoji": {
                        "type": "string",
                        "nullable": true,
                        "description": "The role's unicode emoji as a standard emoji (if the guild has the ROLE_ICONS feature)"
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/PermissionBit"
                    },
                    "mentionable": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether the role should be mentionable."
                    }
                }
            },
            "ChannelType": {
                "type": "integer",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    10,
                    11,
                    12,
                    13
                ],
                "format": "int32",
                "description": "The channel type.\n0 is a guild text channel, 1 is a DM between user, 2 is a guild voice channel,\n3 is a group DM, 4 is a guild category, 5 is a guild news channel,\n6 is a guild store channel, 10 is a temporary sub-channel within news channels,\n11 is a public thread, 12 is a private thread, 13 is a guild stage channel."
            },
            "Snowflake": {
                "type": "string",
                "description": "A snowflake or ID for identifying unique object in Discord."
            },
            "PermissionsOverwriteObject": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "type": {
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ],
                        "format": "int32",
                        "description": "The overwrite type.\n0 for role, 1 for member"
                    },
                    "allow": {
                        "$ref": "#/components/schemas/PermissionBit"
                    },
                    "deny": {
                        "$ref": "#/components/schemas/PermissionBit"
                    }
                },
                "required": [
                    "id",
                    "type",
                    "allow",
                    "deny"
                ]
            },
            "VideoQualityMode": {
                "type": "integer",
                "enum": [
                    1,
                    2
                ],
                "format": "int32",
                "description": "The video quality that user can pick when streaming\n1 means automatically choosen by discord, 2 means 720p"
            },
            "ThreadArchive": {
                "type": "integer",
                "enum": [
                    60,
                    1440,
                    4320,
                    10080
                ],
                "format": "int32",
                "description": "The thread archive duration, in seconds.\n4320 is locked behind boost level 1, 10080 is locked behind boost level 2."
            },
            "ChannelGuildMessageBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The channel name."
                    },
                    "type": {
                        "$ref": "#/components/schemas/ChannelType"
                    },
                    "position": {
                        "type": "number",
                        "format": "float",
                        "description": "The position of the channel in a guild."
                    },
                    "topic": {
                        "type": "string",
                        "nullable": true,
                        "description": "The topic of the channel."
                    },
                    "nsfw": {
                        "type": "boolean",
                        "description": "Is the channel NSFW-restricted or not."
                    },
                    "rate_limit_per_user": {
                        "type": "number",
                        "format": "float",
                        "description": "Slowmode of the channel."
                    },
                    "bitrate": {
                        "type": "number",
                        "format": "float",
                        "description": "The bitrate of the voice/stage channel."
                    },
                    "user_limit": {
                        "type": "number",
                        "format": "float",
                        "description": "The user limit of the voice channel"
                    },
                    "permission_overwrites": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PermissionsOverwriteObject"
                        },
                        "description": "Explicit permission overwrites for members and roles"
                    },
                    "parent_id": {
                        "$ref": "#/components/schemas/Snowflake",
                        "nullable": true
                    },
                    "rtc_region": {
                        "type": "string",
                        "nullable": true,
                        "description": "Voice region id for the voice channel, automatic when set to null."
                    },
                    "video_quality_mode": {
                        "$ref": "#/components/schemas/VideoQualityMode"
                    },
                    "default_auto_archive_duration": {
                        "$ref": "#/components/schemas/ThreadArchive"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "POSTGuildCreation": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 100,
                        "description": "Name of the guild (2-100 characters)"
                    },
                    "region": {
                        "type": "string",
                        "deprecated": true,
                        "description": "Voice region ID (Replaced with channel.rtc_region)"
                    },
                    "icon": {
                        "$ref": "#/components/schemas/B64StringFile"
                    },
                    "verification_level": {
                        "$ref": "#/components/schemas/VerificationLevel"
                    },
                    "default_message_notifications": {
                        "$ref": "#/components/schemas/MessageNotificationLevel"
                    },
                    "explicit_content_filter": {
                        "$ref": "#/components/schemas/ExplicitContentFilterLevel"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GuildRoleBody"
                        },
                        "description": "New guild roles\nIf this is provided, the first role permission will be used for the @everyone role."
                    },
                    "channels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChannelGuildMessageBody"
                        },
                        "description": "New guild channels.\nIf provided, the default channels will not be created."
                    },
                    "afk_channel_id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "afk_timeout": {
                        "type": "number",
                        "format": "float",
                        "description": "AFK timeout in seconds"
                    },
                    "system_channel_id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "system_channel_flags": {
                        "type": "number",
                        "format": "float",
                        "description": "This is the combined bitwise value of the system channel flags."
                    },
                    "premium_progress_bar_enabled": {
                        "type": "boolean",
                        "description": "Whether the guild's boost progress bar should be enabled."
                    }
                },
                "required": [
                    "name",
                    "premium_progress_bar_enabled"
                ]
            },
            "RoleTagObject": {
                "type": "object",
                "properties": {
                    "bot_id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "integration_id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "premium_subscriber": {
                        "type": "boolean",
                        "description": "Whether this is the guild's premium subscriber role"
                    }
                }
            },
            "RoleObject": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Role name"
                    },
                    "color": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Integer representation of the role color, default to 0 (for no color)"
                    },
                    "hoist": {
                        "type": "boolean",
                        "description": "If this role is pinned in the user listing"
                    },
                    "icon": {
                        "type": "string",
                        "nullable": true,
                        "description": "Role icon hash\nGuild must be boosted to level 2 to have this."
                    },
                    "unicode_emoji": {
                        "type": "string",
                        "nullable": true,
                        "description": "Role unicode emoji\nGuild must be boosted to level 2 to have this."
                    },
                    "position": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The position of the role"
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/PermissionBit"
                    },
                    "managed": {
                        "type": "boolean",
                        "description": "Is the role managed by an integration or not?"
                    },
                    "mentionable": {
                        "type": "boolean",
                        "description": "Whether the role can be mentioned by anyone or not"
                    },
                    "tags": {
                        "$ref": "#/components/schemas/RoleTagObject"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "color",
                    "hoist",
                    "position",
                    "permissions",
                    "managed",
                    "mentionable"
                ]
            },
            "MFALevel": {
                "type": "integer",
                "enum": [
                    0,
                    1
                ],
                "format": "int32",
                "description": "Guild MFA level needed for user to join.\n0 means none, 1 means elevated/needed."
            },
            "SystemChannelFlags": {
                "type": "integer",
                "enum": [
                    1,
                    2,
                    4,
                    8
                ],
                "format": "int32",
                "description": "Supress some system channels messages.\n1 will disable member join notification,\n2 will disable server boost notification,\n4 will disable server setup tips\n8 will hide member join sticker reply actions."
            },
            "PremiumTier": {
                "type": "integer",
                "enum": [
                    0,
                    1,
                    2,
                    3
                ],
                "format": "int32",
                "description": "Current boost level of the guild.\n0 means none, 1 means level 1, 2 means level 2, etc."
            },
            "WelcomeScreenChannelObject": {
                "type": "object",
                "properties": {
                    "channel_id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description shown for the channel"
                    },
                    "emoji_id": {
                        "$ref": "#/components/schemas/Snowflake",
                        "nullable": true
                    },
                    "emoji_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The emoji name if custom, return the unicode if standard,\nor null if emoji is not set"
                    }
                },
                "required": [
                    "channel_id",
                    "description",
                    "emoji_id",
                    "emoji_name"
                ]
            },
            "WelcomeScreenGuildObject": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The server description shown in the welcome screen"
                    },
                    "welcome_channels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WelcomeScreenChannelObject"
                        },
                        "maxItems": 5,
                        "description": "The channels shown in the welcome screen, up to 5"
                    }
                },
                "required": [
                    "description",
                    "welcome_channels"
                ]
            },
            "NSFWLevel": {
                "type": "integer",
                "enum": [
                    0,
                    1,
                    2,
                    3
                ],
                "format": "int32",
                "description": "The NSFW level of the guild\n0 means default level, 1 means explicit content only,\n2 means safe, 3 means age restricted."
            },
            "PartialUserObject": {
                "type": "object",
                "properties": {
                    "public_flags": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The public flags of the user.\nLearn more about flags here: https://discord.com/developers/docs/resources/user#user-object-user-flags"
                    },
                    "id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "name": {
                        "type": "string",
                        "description": "The user name"
                    },
                    "discriminator": {
                        "type": "string",
                        "description": "The user discriminator (the 4 digits after the \"#\" sign)"
                    },
                    "avatar": {
                        "type": "string",
                        "description": "The avatar hash of the user"
                    }
                },
                "required": [
                    "public_flags",
                    "id",
                    "name",
                    "discriminator"
                ]
            },
            "StickerObject": {
                "type": "object",
                "properties": {
                    "pack_id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The sticker description"
                    },
                    "tags": {
                        "type": "string",
                        "maxLength": 200,
                        "description": "Autocompletion/suggestion tags.\nThis is a comma separated strings (max 200 characters)"
                    },
                    "type": {
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ],
                        "format": "int32",
                        "description": "The type of the sticker\n1 means that it's from the official sticker in a pack, part of nitro or purchased stickers.\n2 means that it's from a guild."
                    },
                    "available": {
                        "type": "boolean",
                        "description": "Whether this guild sticker can be used, may be false due to loss of Server Boosts"
                    },
                    "guild_id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "user": {
                        "$ref": "#/components/schemas/PartialUserObject"
                    },
                    "sort_value": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The standard sticker's sort order within its pack"
                    },
                    "id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "name": {
                        "type": "string",
                        "description": "The sticker name"
                    },
                    "format_type": {
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3
                        ],
                        "format": "int32",
                        "description": "The sticker format\n1 means PNG, 2 means APNG, 3 means Lottie"
                    }
                },
                "required": [
                    "description",
                    "tags",
                    "type",
                    "id",
                    "name",
                    "format_type"
                ]
            },
            "GuildEmojiObject": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The emoji name (can be null only in reactions emote object)"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Snowflake"
                        },
                        "description": "Array of role object IDs, contains user that can use this emoji"
                    },
                    "user": {
                        "$ref": "#/components/schemas/PartialUserObject"
                    },
                    "require_colons": {
                        "type": "boolean",
                        "description": "Whether this emoji must be wrapped in colons"
                    },
                    "managed": {
                        "type": "boolean",
                        "description": "Whether this emoji is managed by an integration"
                    },
                    "animated": {
                        "type": "boolean",
                        "description": "Whether this emoji is animated.\nIf the emote is animated, the hash need to be prefixed by `a_`"
                    },
                    "available": {
                        "type": "boolean",
                        "description": "Whether this emoji can be used, may be false due to loss of Server Boosts"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "GuildFeatures": {
                "type": "string",
                "enum": [
                    "ANIMATED_BANNER",
                    "ANIMATED_ICON",
                    "BANNER",
                    "COMMERCE",
                    "COMMUNITY",
                    "DISCOVERABLE",
                    "FEATURABLE",
                    "INVITE_SPLASH",
                    "MEMBER_VERIFICATION_GATE_ENABLED",
                    "MONETIZATION_ENABLED",
                    "MORE_EMOJI",
                    "MORE_STICKERS",
                    "NEWS",
                    "PARTNERED",
                    "PREVIEW_ENABLED",
                    "PRIVATE_THREADS",
                    "ROLE_ICONS",
                    "SEVEN_DAY_THREAD_ARCHIVE",
                    "THREE_DAY_THREAD_ARCHIVE",
                    "TICKETED_EVENTS_ENABLED",
                    "VANITY_URL",
                    "VERIFIED",
                    "VIP_REGIONS",
                    "WELCOME_SCREEN_ENABLED"
                ],
                "description": "Guild features, if the guild have one of this features,\nthat means the guild have it enabled or available."
            },
            "GuildHTTPObject": {
                "type": "object",
                "properties": {
                    "owner": {
                        "type": "boolean",
                        "description": "True if the user is the owner of the guild. Only available via API,\nwill return the current user requesting to the API."
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/PermissionBit"
                    },
                    "icon_hash": {
                        "type": "string",
                        "nullable": true,
                        "description": "The guild icon hash, returned if the guild is a template object"
                    },
                    "owner_id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "region": {
                        "type": "string",
                        "nullable": true,
                        "description": "Voice region ID for the guild (deprecated)"
                    },
                    "afk_channel_id": {
                        "$ref": "#/components/schemas/Snowflake",
                        "nullable": true
                    },
                    "afk_timeout": {
                        "type": "number",
                        "format": "float",
                        "description": "The AFK timeout before someone is moved to AFK channel (in seconds)"
                    },
                    "widget_enabled": {
                        "type": "boolean",
                        "description": "Whether is the server widget is enabled"
                    },
                    "widget_channel_id": {
                        "$ref": "#/components/schemas/Snowflake",
                        "nullable": true
                    },
                    "verification_level": {
                        "$ref": "#/components/schemas/VerificationLevel"
                    },
                    "default_message_notifications": {
                        "$ref": "#/components/schemas/MessageNotificationLevel"
                    },
                    "explicit_content_filter": {
                        "$ref": "#/components/schemas/ExplicitContentFilterLevel"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RoleObject"
                        },
                        "description": "Roles in the guild"
                    },
                    "mfa_level": {
                        "$ref": "#/components/schemas/MFALevel"
                    },
                    "application_id": {
                        "$ref": "#/components/schemas/Snowflake",
                        "nullable": true
                    },
                    "system_channel_id": {
                        "$ref": "#/components/schemas/Snowflake",
                        "nullable": true
                    },
                    "system_channel_flags": {
                        "$ref": "#/components/schemas/SystemChannelFlags"
                    },
                    "rules_channel_id": {
                        "$ref": "#/components/schemas/Snowflake",
                        "nullable": true
                    },
                    "max_presences": {
                        "type": "number",
                        "format": "float",
                        "nullable": true,
                        "description": "The maximum number of presences for the guild (null is always returned, apart from the largest of guilds)"
                    },
                    "max_members": {
                        "type": "number",
                        "format": "float",
                        "description": "The maximum number of members for the guild"
                    },
                    "vanity_url_code": {
                        "type": "string",
                        "nullable": true,
                        "description": "The vanity invite url code for the guild"
                    },
                    "banner": {
                        "type": "string",
                        "nullable": true,
                        "description": "The banner hash"
                    },
                    "premium_tier": {
                        "$ref": "#/components/schemas/PremiumTier"
                    },
                    "premium_subscription_count": {
                        "type": "number",
                        "format": "float",
                        "description": "The number of boosts this guild currently has"
                    },
                    "preferred_locale": {
                        "type": "string",
                        "description": "The preferred locale of a Community guild;\nused in server discovery and notices from Discord;\ndefaults to \"en-US\""
                    },
                    "public_updates_channel_id": {
                        "$ref": "#/components/schemas/Snowflake",
                        "nullable": true
                    },
                    "max_video_channel_users": {
                        "type": "number",
                        "format": "float",
                        "description": "The maximum amount of users in a video channel"
                    },
                    "welcome_screen": {
                        "$ref": "#/components/schemas/WelcomeScreenGuildObject"
                    },
                    "nsfw_level": {
                        "$ref": "#/components/schemas/NSFWLevel"
                    },
                    "stickers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StickerObject"
                        },
                        "description": "Custom guild stickers"
                    },
                    "id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Guild name"
                    },
                    "icon": {
                        "type": "string",
                        "nullable": true,
                        "description": "The guild icon hash"
                    },
                    "emojis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GuildEmojiObject"
                        },
                        "description": "Emojis in the guild"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GuildFeatures"
                        },
                        "description": "Enabled guild features"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The description of a Community guild"
                    },
                    "splash": {
                        "type": "string",
                        "nullable": true,
                        "description": "The splash screen hash"
                    },
                    "discovery_splash": {
                        "type": "string",
                        "nullable": true,
                        "description": "The discovery splash hash, only present for guilds with \"DISCOVERABLE\" feature"
                    }
                },
                "required": [
                    "owner_id",
                    "afk_channel_id",
                    "afk_timeout",
                    "verification_level",
                    "default_message_notifications",
                    "explicit_content_filter",
                    "roles",
                    "mfa_level",
                    "application_id",
                    "system_channel_id",
                    "system_channel_flags",
                    "rules_channel_id",
                    "vanity_url_code",
                    "banner",
                    "premium_tier",
                    "preferred_locale",
                    "public_updates_channel_id",
                    "max_video_channel_users",
                    "welcome_screen",
                    "nsfw_level",
                    "stickers",
                    "id",
                    "name",
                    "icon",
                    "emojis",
                    "features",
                    "description",
                    "splash",
                    "discovery_splash"
                ]
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The error code of the error."
                    },
                    "errors": {
                        "type": "object",
                        "description": "The more detailed information of where the error occurred.\nUsually it's the fault in your request body."
                    },
                    "message": {
                        "type": "string",
                        "description": "The error message."
                    }
                },
                "required": [
                    "code",
                    "errors",
                    "message"
                ]
            },
            "GuildPreviewObject": {
                "type": "object",
                "properties": {
                    "approximate_member_count": {
                        "type": "number",
                        "format": "float",
                        "description": "Approximate number of members in this guild, returned if `with_counts` is true in the guilds request"
                    },
                    "approximate_presence_count": {
                        "type": "number",
                        "format": "float",
                        "description": "Approximate number of non-offline members, returned if `with_counts` is true in the guilds request"
                    },
                    "id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Guild name"
                    },
                    "icon": {
                        "type": "string",
                        "nullable": true,
                        "description": "The guild icon hash"
                    },
                    "emojis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GuildEmojiObject"
                        },
                        "description": "Emojis in the guild"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GuildFeatures"
                        },
                        "description": "Enabled guild features"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The description of a Community guild"
                    },
                    "splash": {
                        "type": "string",
                        "nullable": true,
                        "description": "The splash screen hash"
                    },
                    "discovery_splash": {
                        "type": "string",
                        "nullable": true,
                        "description": "The discovery splash hash, only present for guilds with \"DISCOVERABLE\" feature"
                    }
                },
                "required": [
                    "approximate_member_count",
                    "approximate_presence_count",
                    "id",
                    "name",
                    "icon",
                    "emojis",
                    "features",
                    "description",
                    "splash",
                    "discovery_splash"
                ]
            },
            "ISO8601": {
                "type": "string",
                "format": "date-time",
                "description": "An ISO8601 compliant timestamp."
            },
            "GuildChannel": {
                "type": "object",
                "properties": {
                    "guild_id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "position": {
                        "type": "number",
                        "format": "float",
                        "description": "The position of the channel in a guild."
                    },
                    "topic": {
                        "type": "string",
                        "nullable": true,
                        "description": "The topic of the channel."
                    },
                    "nsfw": {
                        "type": "boolean",
                        "description": "Is the channel NSFW-restricted or not."
                    },
                    "rate_limit_per_user": {
                        "type": "number",
                        "format": "float",
                        "description": "Slowmode of the channel."
                    },
                    "bitrate": {
                        "type": "number",
                        "format": "float",
                        "description": "The bitrate of the voice/stage channel."
                    },
                    "user_limit": {
                        "type": "number",
                        "format": "float",
                        "description": "The user limit of the voice channel"
                    },
                    "permission_overwrites": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PermissionsOverwriteObject"
                        },
                        "description": "Explicit permission overwrites for members and roles"
                    },
                    "parent_id": {
                        "$ref": "#/components/schemas/Snowflake",
                        "nullable": true
                    },
                    "rtc_region": {
                        "type": "string",
                        "nullable": true,
                        "description": "Voice region id for the voice channel, automatic when set to null."
                    },
                    "video_quality_mode": {
                        "$ref": "#/components/schemas/VideoQualityMode"
                    },
                    "default_auto_archive_duration": {
                        "$ref": "#/components/schemas/ThreadArchive"
                    },
                    "last_message_id": {
                        "$ref": "#/components/schemas/Snowflake",
                        "nullable": true
                    },
                    "last_pin_timestamp": {
                        "$ref": "#/components/schemas/ISO8601",
                        "nullable": true
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/PermissionBit"
                    },
                    "id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "name": {
                        "type": "string",
                        "description": "The channel name."
                    },
                    "type": {
                        "$ref": "#/components/schemas/ChannelType"
                    }
                },
                "required": [
                    "id",
                    "type"
                ]
            },
            "PartialRoleObject": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "name": {
                        "type": "string",
                        "description": "The role name."
                    }
                }
            },
            "AuditLogChangeKey": {
                "type": "string",
                "enum": [
                    "afk_channel_id",
                    "afk_timeout",
                    "allow",
                    "deny",
                    "application_id",
                    "archived",
                    "asset",
                    "auto_archive_duration",
                    "available",
                    "avatar_hash",
                    "banner_hash",
                    "bitrate",
                    "channel_id",
                    "code",
                    "color",
                    "deaf",
                    "default_auto_archive_duration",
                    "default_message_notifications",
                    "description",
                    "discovery_splash_hash",
                    "enable_emoticons",
                    "expire_behavior",
                    "expire_grace_period",
                    "explicit_content_filter",
                    "format_type",
                    "guild_id",
                    "hoist",
                    "icon_hash",
                    "id",
                    "inviter_id",
                    "locked",
                    "max_age",
                    "max_uses",
                    "mentionable",
                    "mfa_level",
                    "mute",
                    "name",
                    "nick",
                    "nsfw",
                    "owner_id",
                    "permission_overwrites",
                    "permissions",
                    "position",
                    "preferred_locale",
                    "privacy_level",
                    "prune_delete_days",
                    "public_updates_channel_id",
                    "rate_limit_per_user",
                    "region",
                    "rules_channel_id",
                    "splash_hash",
                    "system_channel_id",
                    "tags",
                    "temporary",
                    "topic",
                    "type",
                    "unicode_emoji",
                    "user_limit",
                    "uses",
                    "vanity_url_code",
                    "verification_level",
                    "widget_channel_id",
                    "widget_enabled",
                    "$add",
                    "$remove"
                ]
            },
            "AuditLogChange": {
                "type": "object",
                "properties": {
                    "new_value": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number",
                                "format": "float"
                            },
                            {
                                "type": "boolean"
                            },
                            {
                                "$ref": "#/components/schemas/Snowflake"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PartialRoleObject"
                                }
                            }
                        ],
                        "description": "The new value of the key"
                    },
                    "old_value": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number",
                                "format": "float"
                            },
                            {
                                "type": "boolean"
                            },
                            {
                                "$ref": "#/components/schemas/Snowflake"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PartialRoleObject"
                                }
                            }
                        ],
                        "description": "The old value of the key"
                    },
                    "key": {
                        "$ref": "#/components/schemas/AuditLogChangeKey"
                    }
                },
                "required": [
                    "key"
                ]
            },
            "AuditLogChangeOptional": {
                "type": "object",
                "properties": {
                    "channel_id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "count": {
                        "type": "string",
                        "description": "Numbers of entities that are targeted."
                    },
                    "delete_member_days": {
                        "type": "string",
                        "description": "Numbers of days after which inactive members were kicked"
                    },
                    "id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "members_removed": {
                        "type": "string",
                        "description": "Number of members removed by the prune"
                    },
                    "message_id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "role_name": {
                        "type": "string",
                        "description": "Name of the role if type is \"0\" (not present if type is \"1\")"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "0",
                            "1"
                        ],
                        "description": "Type of overwritten entity - \"0\" for \"role\" or \"1\" for \"member\""
                    }
                }
            },
            "AuditLogEntry": {
                "type": "object",
                "properties": {
                    "target_id": {
                        "type": "string",
                        "description": "ID of the affected entity (webhook, user, role, etc.)"
                    },
                    "changes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AuditLogChange"
                        },
                        "description": "Changes made into target_id"
                    },
                    "user_id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "action_type": {
                        "type": "number",
                        "format": "float",
                        "description": "Type of action that occured.\nhttps://discord.com/developers/docs/resources/audit-log#audit-log-entry-object-audit-log-events"
                    },
                    "options": {
                        "$ref": "#/components/schemas/AuditLogChangeOptional",
                        "nullable": true
                    },
                    "reason": {
                        "type": "string",
                        "description": "The reason for the changes."
                    }
                }
            },
            "AuditLogResponse": {
                "type": "object",
                "properties": {
                    "audit_log_entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AuditLogEntry"
                        },
                        "description": "List of audit log entries."
                    }
                },
                "required": [
                    "audit_log_entries"
                ]
            }
        },
        "securitySchemes": {
            "SecurityHeader": {
                "type": "apiKey",
                "in": "header",
                "name": "Authorization"
            }
        }
    },
    "security": [
        {
            "SecurityHeader": []
        }
    ],
    "servers": [
        {
            "url": "https://discord.com/api/{apiVersion}",
            "description": "The main endpoint for Discord API",
            "variables": {
                "apiVersion": {
                    "default": "v9",
                    "enum": [
                        "v6",
                        "v8",
                        "v9"
                    ]
                }
            }
        },
        {
            "url": "https://canary.discord.com/api/{apiVersion}",
            "description": "The canary endpoint for Discord API",
            "variables": {
                "apiVersion": {
                    "default": "v9",
                    "enum": [
                        "v6",
                        "v8",
                        "v9"
                    ]
                }
            }
        }
    ]
}